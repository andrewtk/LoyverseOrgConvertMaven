/*
 * This file is generated by jOOQ.
*/
package DBlorg;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.*;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Lorg extends SchemaImpl {

    private static final long serialVersionUID = 1475366485;

    /**
     * The reference instance of <code>DBlorg</code>
     */
    public static final Lorg LORG = new Lorg();

    /**
     * The table <code>DBlorg.qa_achievements</code>.
     */
    public final QaAchievements QA_ACHIEVEMENTS = QaAchievements.QA_ACHIEVEMENTS;

    /**
     * The table <code>DBlorg.qa_blobs</code>.
     */
    public final QaBlobs QA_BLOBS = QaBlobs.QA_BLOBS;

    /**
     * The table <code>DBlorg.qa_blog_comments</code>.
     */
    public final QaBlogComments QA_BLOG_COMMENTS = QaBlogComments.QA_BLOG_COMMENTS;

    /**
     * The table <code>DBlorg.qa_blog_posts</code>.
     */
    public final QaBlogPosts QA_BLOG_POSTS = QaBlogPosts.QA_BLOG_POSTS;

    /**
     * The table <code>DBlorg.qa_blog_users</code>.
     */
    public final QaBlogUsers QA_BLOG_USERS = QaBlogUsers.QA_BLOG_USERS;

    /**
     * The table <code>DBlorg.qa_cache</code>.
     */
    public final QaCache QA_CACHE = QaCache.QA_CACHE;

    /**
     * The table <code>DBlorg.qa_categories</code>.
     */
    public final QaCategories QA_CATEGORIES = QaCategories.QA_CATEGORIES;

    /**
     * The table <code>DBlorg.qa_categorymetas</code>.
     */
    public final QaCategorymetas QA_CATEGORYMETAS = QaCategorymetas.QA_CATEGORYMETAS;

    /**
     * The table <code>DBlorg.qa_contentwords</code>.
     */
    public final QaContentwords QA_CONTENTWORDS = QaContentwords.QA_CONTENTWORDS;

    /**
     * The table <code>DBlorg.qa_cookies</code>.
     */
    public final QaCookies QA_COOKIES = QaCookies.QA_COOKIES;

    /**
     * The table <code>DBlorg.qa_iplimits</code>.
     */
    public final QaIplimits QA_IPLIMITS = QaIplimits.QA_IPLIMITS;

    /**
     * The table <code>DBlorg.qa_logo</code>.
     */
    public final QaLogo QA_LOGO = QaLogo.QA_LOGO;

    /**
     * The table <code>DBlorg.qa_messages</code>.
     */
    public final QaMessages QA_MESSAGES = QaMessages.QA_MESSAGES;

    /**
     * The table <code>DBlorg.qa_online_user</code>.
     */
    public final QaOnlineUser QA_ONLINE_USER = QaOnlineUser.QA_ONLINE_USER;

    /**
     * The table <code>DBlorg.qa_options</code>.
     */
    public final QaOptions QA_OPTIONS = QaOptions.QA_OPTIONS;

    /**
     * The table <code>DBlorg.qa_pages</code>.
     */
    public final QaPages QA_PAGES = QaPages.QA_PAGES;

    /**
     * The table <code>DBlorg.qa_postmetas</code>.
     */
    public final QaPostmetas QA_POSTMETAS = QaPostmetas.QA_POSTMETAS;

    /**
     * The table <code>DBlorg.qa_posts</code>.
     */
    public final QaPosts QA_POSTS = QaPosts.QA_POSTS;

    /**
     * The table <code>DBlorg.qa_posttags</code>.
     */
    public final QaPosttags QA_POSTTAGS = QaPosttags.QA_POSTTAGS;

    /**
     * The table <code>DBlorg.qa_sharedevents</code>.
     */
    public final QaSharedevents QA_SHAREDEVENTS = QaSharedevents.QA_SHAREDEVENTS;

    /**
     * The table <code>DBlorg.qa_tagmetas</code>.
     */
    public final QaTagmetas QA_TAGMETAS = QaTagmetas.QA_TAGMETAS;

    /**
     * The table <code>DBlorg.qa_tagwords</code>.
     */
    public final QaTagwords QA_TAGWORDS = QaTagwords.QA_TAGWORDS;

    /**
     * The table <code>DBlorg.qa_titlewords</code>.
     */
    public final QaTitlewords QA_TITLEWORDS = QaTitlewords.QA_TITLEWORDS;

    /**
     * The table <code>DBlorg.qa_topics</code>.
     */
    public final QaTopics QA_TOPICS = QaTopics.QA_TOPICS;

    /**
     * The table <code>DBlorg.qa_userbadges</code>.
     */
    public final QaUserbadges QA_USERBADGES = QaUserbadges.QA_USERBADGES;

    /**
     * The table <code>DBlorg.qa_userevents</code>.
     */
    public final QaUserevents QA_USEREVENTS = QaUserevents.QA_USEREVENTS;

    /**
     * The table <code>DBlorg.qa_userfavorites</code>.
     */
    public final QaUserfavorites QA_USERFAVORITES = QaUserfavorites.QA_USERFAVORITES;

    /**
     * The table <code>DBlorg.qa_userfields</code>.
     */
    public final QaUserfields QA_USERFIELDS = QaUserfields.QA_USERFIELDS;

    /**
     * The table <code>DBlorg.qa_userlevels</code>.
     */
    public final QaUserlevels QA_USERLEVELS = QaUserlevels.QA_USERLEVELS;

    /**
     * The table <code>DBlorg.qa_userlimits</code>.
     */
    public final QaUserlimits QA_USERLIMITS = QaUserlimits.QA_USERLIMITS;

    /**
     * The table <code>DBlorg.qa_userlogins</code>.
     */
    public final QaUserlogins QA_USERLOGINS = QaUserlogins.QA_USERLOGINS;

    /**
     * The table <code>DBlorg.qa_usermetas</code>.
     */
    public final QaUsermetas QA_USERMETAS = QaUsermetas.QA_USERMETAS;

    /**
     * The table <code>DBlorg.qa_usernotices</code>.
     */
    public final QaUsernotices QA_USERNOTICES = QaUsernotices.QA_USERNOTICES;

    /**
     * The table <code>DBlorg.qa_userpoints</code>.
     */
    public final QaUserpoints QA_USERPOINTS = QaUserpoints.QA_USERPOINTS;

    /**
     * The table <code>DBlorg.qa_userprofile</code>.
     */
    public final QaUserprofile QA_USERPROFILE = QaUserprofile.QA_USERPROFILE;

    /**
     * The table <code>DBlorg.qa_users</code>.
     */
    public final QaUsers QA_USERS = QaUsers.QA_USERS;

    /**
     * The table <code>DBlorg.qa_uservotes</code>.
     */
    public final QaUservotes QA_USERVOTES = QaUservotes.QA_USERVOTES;

    /**
     * The table <code>DBlorg.qa_widgets</code>.
     */
    public final QaWidgets QA_WIDGETS = QaWidgets.QA_WIDGETS;

    /**
     * The table <code>DBlorg.qa_words</code>.
     */
    public final QaWords QA_WORDS = QaWords.QA_WORDS;

    /**
     * No further instances allowed
     */
    private Lorg() {
        super("lorg", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            QaAchievements.QA_ACHIEVEMENTS,
            QaBlobs.QA_BLOBS,
            QaBlogComments.QA_BLOG_COMMENTS,
            QaBlogPosts.QA_BLOG_POSTS,
            QaBlogUsers.QA_BLOG_USERS,
            QaCache.QA_CACHE,
            QaCategories.QA_CATEGORIES,
            QaCategorymetas.QA_CATEGORYMETAS,
            QaContentwords.QA_CONTENTWORDS,
            QaCookies.QA_COOKIES,
            QaIplimits.QA_IPLIMITS,
            QaLogo.QA_LOGO,
            QaMessages.QA_MESSAGES,
            QaOnlineUser.QA_ONLINE_USER,
            QaOptions.QA_OPTIONS,
            QaPages.QA_PAGES,
            QaPostmetas.QA_POSTMETAS,
            QaPosts.QA_POSTS,
            QaPosttags.QA_POSTTAGS,
            QaSharedevents.QA_SHAREDEVENTS,
            QaTagmetas.QA_TAGMETAS,
            QaTagwords.QA_TAGWORDS,
            QaTitlewords.QA_TITLEWORDS,
            QaTopics.QA_TOPICS,
            QaUserbadges.QA_USERBADGES,
            QaUserevents.QA_USEREVENTS,
            QaUserfavorites.QA_USERFAVORITES,
            QaUserfields.QA_USERFIELDS,
            QaUserlevels.QA_USERLEVELS,
            QaUserlimits.QA_USERLIMITS,
            QaUserlogins.QA_USERLOGINS,
            QaUsermetas.QA_USERMETAS,
            QaUsernotices.QA_USERNOTICES,
            QaUserpoints.QA_USERPOINTS,
            QaUserprofile.QA_USERPROFILE,
            QaUsers.QA_USERS,
            QaUservotes.QA_USERVOTES,
            QaWidgets.QA_WIDGETS,
            QaWords.QA_WORDS);
    }
}
