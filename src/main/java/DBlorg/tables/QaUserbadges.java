/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaUserbadgesRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaUserbadges extends TableImpl<QaUserbadgesRecord> {

    private static final long serialVersionUID = 861575769;

    /**
     * The reference instance of <code>DBlorg.qa_userbadges</code>
     */
    public static final QaUserbadges QA_USERBADGES = new QaUserbadges();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaUserbadgesRecord> getRecordType() {
        return QaUserbadgesRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_userbadges.awarded_at</code>.
     */
    public final TableField<QaUserbadgesRecord, Timestamp> AWARDED_AT = createField("awarded_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_userbadges.user_id</code>.
     */
    public final TableField<QaUserbadgesRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_userbadges.notify</code>.
     */
    public final TableField<QaUserbadgesRecord, Byte> NOTIFY = createField("notify", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>DBlorg.qa_userbadges.object_id</code>.
     */
    public final TableField<QaUserbadgesRecord, Integer> OBJECT_ID = createField("object_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>DBlorg.qa_userbadges.badge_slug</code>.
     */
    public final TableField<QaUserbadgesRecord, String> BADGE_SLUG = createField("badge_slug", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>DBlorg.qa_userbadges.id</code>.
     */
    public final TableField<QaUserbadgesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * Create a <code>DBlorg.qa_userbadges</code> table reference
     */
    public QaUserbadges() {
        this(DSL.name("qa_userbadges"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_userbadges</code> table reference
     */
    public QaUserbadges(String alias) {
        this(DSL.name(alias), QA_USERBADGES);
    }

    /**
     * Create an aliased <code>DBlorg.qa_userbadges</code> table reference
     */
    public QaUserbadges(Name alias) {
        this(alias, QA_USERBADGES);
    }

    private QaUserbadges(Name alias, Table<QaUserbadgesRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaUserbadges(Name alias, Table<QaUserbadgesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_USERBADGES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QaUserbadgesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_QA_USERBADGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QaUserbadgesRecord> getPrimaryKey() {
        return Keys.KEY_QA_USERBADGES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaUserbadgesRecord>> getKeys() {
        return Arrays.<UniqueKey<QaUserbadgesRecord>>asList(Keys.KEY_QA_USERBADGES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUserbadges as(String alias) {
        return new QaUserbadges(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUserbadges as(Name alias) {
        return new QaUserbadges(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUserbadges rename(String name) {
        return new QaUserbadges(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUserbadges rename(Name name) {
        return new QaUserbadges(name, null);
    }
}
