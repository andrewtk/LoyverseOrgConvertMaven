/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaCacheRecord;
import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaCache extends TableImpl<QaCacheRecord> {

    private static final long serialVersionUID = 1374779296;

    /**
     * The reference instance of <code>DBlorg.qa_cache</code>
     */
    public static final QaCache QA_CACHE = new QaCache();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaCacheRecord> getRecordType() {
        return QaCacheRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_cache.type</code>.
     */
    public final TableField<QaCacheRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CHAR(8).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_cache.cacheid</code>.
     */
    public final TableField<QaCacheRecord, ULong> CACHEID = createField("cacheid", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>DBlorg.qa_cache.content</code>.
     */
    public final TableField<QaCacheRecord, byte[]> CONTENT = createField("content", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_cache.created</code>.
     */
    public final TableField<QaCacheRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_cache.lastread</code>.
     */
    public final TableField<QaCacheRecord, Timestamp> LASTREAD = createField("lastread", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>DBlorg.qa_cache</code> table reference
     */
    public QaCache() {
        this(DSL.name("qa_cache"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_cache</code> table reference
     */
    public QaCache(String alias) {
        this(DSL.name(alias), QA_CACHE);
    }

    /**
     * Create an aliased <code>DBlorg.qa_cache</code> table reference
     */
    public QaCache(Name alias) {
        this(alias, QA_CACHE);
    }

    private QaCache(Name alias, Table<QaCacheRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaCache(Name alias, Table<QaCacheRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_CACHE_LASTREAD, Indexes.QA_CACHE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QaCacheRecord> getPrimaryKey() {
        return Keys.KEY_QA_CACHE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaCacheRecord>> getKeys() {
        return Arrays.<UniqueKey<QaCacheRecord>>asList(Keys.KEY_QA_CACHE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaCache as(String alias) {
        return new QaCache(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaCache as(Name alias) {
        return new QaCache(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaCache rename(String name) {
        return new QaCache(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaCache rename(Name name) {
        return new QaCache(name, null);
    }
}
