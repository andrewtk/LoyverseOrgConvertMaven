/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaUservotesRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaUservotes extends TableImpl<QaUservotesRecord> {

    private static final long serialVersionUID = 1025962239;

    /**
     * The reference instance of <code>DBlorg.qa_uservotes</code>
     */
    public static final QaUservotes QA_USERVOTES = new QaUservotes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaUservotesRecord> getRecordType() {
        return QaUservotesRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_uservotes.postid</code>.
     */
    public final TableField<QaUservotesRecord, UInteger> POSTID = createField("postid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_uservotes.userid</code>.
     */
    public final TableField<QaUservotesRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_uservotes.vote</code>.
     */
    public final TableField<QaUservotesRecord, Byte> VOTE = createField("vote", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_uservotes.flag</code>.
     */
    public final TableField<QaUservotesRecord, Byte> FLAG = createField("flag", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>DBlorg.qa_uservotes</code> table reference
     */
    public QaUservotes() {
        this(DSL.name("qa_uservotes"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_uservotes</code> table reference
     */
    public QaUservotes(String alias) {
        this(DSL.name(alias), QA_USERVOTES);
    }

    /**
     * Create an aliased <code>DBlorg.qa_uservotes</code> table reference
     */
    public QaUservotes(Name alias) {
        this(alias, QA_USERVOTES);
    }

    private QaUservotes(Name alias, Table<QaUservotesRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaUservotes(Name alias, Table<QaUservotesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_USERVOTES_POSTID, Indexes.QA_USERVOTES_USERID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaUservotesRecord>> getKeys() {
        return Arrays.<UniqueKey<QaUservotesRecord>>asList(Keys.KEY_QA_USERVOTES_USERID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QaUservotesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QaUservotesRecord, ?>>asList(Keys.QA_USERVOTES_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUservotes as(String alias) {
        return new QaUservotes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUservotes as(Name alias) {
        return new QaUservotes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUservotes rename(String name) {
        return new QaUservotes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUservotes rename(Name name) {
        return new QaUservotes(name, null);
    }
}
