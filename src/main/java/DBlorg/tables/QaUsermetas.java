/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaUsermetasRecord;
import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaUsermetas extends TableImpl<QaUsermetasRecord> {

    private static final long serialVersionUID = 1121866478;

    /**
     * The reference instance of <code>DBlorg.qa_usermetas</code>
     */
    public static final QaUsermetas QA_USERMETAS = new QaUsermetas();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaUsermetasRecord> getRecordType() {
        return QaUsermetasRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_usermetas.userid</code>.
     */
    public final TableField<QaUsermetasRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_usermetas.title</code>.
     */
    public final TableField<QaUsermetasRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_usermetas.content</code>.
     */
    public final TableField<QaUsermetasRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(8000).nullable(false), this, "");

    /**
     * Create a <code>DBlorg.qa_usermetas</code> table reference
     */
    public QaUsermetas() {
        this(DSL.name("qa_usermetas"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_usermetas</code> table reference
     */
    public QaUsermetas(String alias) {
        this(DSL.name(alias), QA_USERMETAS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_usermetas</code> table reference
     */
    public QaUsermetas(Name alias) {
        this(alias, QA_USERMETAS);
    }

    private QaUsermetas(Name alias, Table<QaUsermetasRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaUsermetas(Name alias, Table<QaUsermetasRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_USERMETAS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QaUsermetasRecord> getPrimaryKey() {
        return Keys.KEY_QA_USERMETAS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaUsermetasRecord>> getKeys() {
        return Arrays.<UniqueKey<QaUsermetasRecord>>asList(Keys.KEY_QA_USERMETAS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUsermetas as(String alias) {
        return new QaUsermetas(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUsermetas as(Name alias) {
        return new QaUsermetas(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUsermetas rename(String name) {
        return new QaUsermetas(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUsermetas rename(Name name) {
        return new QaUsermetas(name, null);
    }
}
