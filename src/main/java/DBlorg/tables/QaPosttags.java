/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaPosttagsRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaPosttags extends TableImpl<QaPosttagsRecord> {

    private static final long serialVersionUID = -356554260;

    /**
     * The reference instance of <code>DBlorg.qa_posttags</code>
     */
    public static final QaPosttags QA_POSTTAGS = new QaPosttags();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaPosttagsRecord> getRecordType() {
        return QaPosttagsRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_posttags.postid</code>.
     */
    public final TableField<QaPosttagsRecord, UInteger> POSTID = createField("postid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_posttags.wordid</code>.
     */
    public final TableField<QaPosttagsRecord, UInteger> WORDID = createField("wordid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_posttags.postcreated</code>.
     */
    public final TableField<QaPosttagsRecord, Timestamp> POSTCREATED = createField("postcreated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>DBlorg.qa_posttags</code> table reference
     */
    public QaPosttags() {
        this(DSL.name("qa_posttags"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_posttags</code> table reference
     */
    public QaPosttags(String alias) {
        this(DSL.name(alias), QA_POSTTAGS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_posttags</code> table reference
     */
    public QaPosttags(Name alias) {
        this(alias, QA_POSTTAGS);
    }

    private QaPosttags(Name alias, Table<QaPosttagsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaPosttags(Name alias, Table<QaPosttagsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_POSTTAGS_POSTID, Indexes.QA_POSTTAGS_WORDID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QaPosttagsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QaPosttagsRecord, ?>>asList(Keys.QA_POSTTAGS_IBFK_1, Keys.QA_POSTTAGS_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaPosttags as(String alias) {
        return new QaPosttags(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaPosttags as(Name alias) {
        return new QaPosttags(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaPosttags rename(String name) {
        return new QaPosttags(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaPosttags rename(Name name) {
        return new QaPosttags(name, null);
    }
}
