/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Lorg;
import DBlorg.tables.records.QaUsereventsRecord;
import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaUserevents extends TableImpl<QaUsereventsRecord> {

    private static final long serialVersionUID = 195622137;

    /**
     * The reference instance of <code>DBlorg.qa_userevents</code>
     */
    public static final QaUserevents QA_USEREVENTS = new QaUserevents();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaUsereventsRecord> getRecordType() {
        return QaUsereventsRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_userevents.userid</code>.
     */
    public final TableField<QaUsereventsRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_userevents.entitytype</code>.
     */
    public final TableField<QaUsereventsRecord, String> ENTITYTYPE = createField("entitytype", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_userevents.entityid</code>.
     */
    public final TableField<QaUsereventsRecord, UInteger> ENTITYID = createField("entityid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_userevents.questionid</code>.
     */
    public final TableField<QaUsereventsRecord, UInteger> QUESTIONID = createField("questionid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_userevents.lastpostid</code>.
     */
    public final TableField<QaUsereventsRecord, UInteger> LASTPOSTID = createField("lastpostid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_userevents.updatetype</code>.
     */
    public final TableField<QaUsereventsRecord, String> UPDATETYPE = createField("updatetype", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>DBlorg.qa_userevents.lastuserid</code>.
     */
    public final TableField<QaUsereventsRecord, String> LASTUSERID = createField("lastuserid", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>DBlorg.qa_userevents.updated</code>.
     */
    public final TableField<QaUsereventsRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>DBlorg.qa_userevents</code> table reference
     */
    public QaUserevents() {
        this(DSL.name("qa_userevents"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_userevents</code> table reference
     */
    public QaUserevents(String alias) {
        this(DSL.name(alias), QA_USEREVENTS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_userevents</code> table reference
     */
    public QaUserevents(Name alias) {
        this(alias, QA_USEREVENTS);
    }

    private QaUserevents(Name alias, Table<QaUsereventsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaUserevents(Name alias, Table<QaUsereventsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_USEREVENTS_QUESTIONID, Indexes.QA_USEREVENTS_USERID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUserevents as(String alias) {
        return new QaUserevents(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUserevents as(Name alias) {
        return new QaUserevents(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUserevents rename(String name) {
        return new QaUserevents(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUserevents rename(Name name) {
        return new QaUserevents(name, null);
    }
}
