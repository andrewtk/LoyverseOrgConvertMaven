/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaBlogPostsRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaBlogPosts extends TableImpl<QaBlogPostsRecord> {

    private static final long serialVersionUID = 1761710819;

    /**
     * The reference instance of <code>DBlorg.qa_blog_posts</code>
     */
    public static final QaBlogPosts QA_BLOG_POSTS = new QaBlogPosts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaBlogPostsRecord> getRecordType() {
        return QaBlogPostsRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_blog_posts.postid</code>.
     */
    public final TableField<QaBlogPostsRecord, UInteger> POSTID = createField("postid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.userid</code>.
     */
    public final TableField<QaBlogPostsRecord, UInteger> USERID = createField("userid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.title</code>.
     */
    public final TableField<QaBlogPostsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(300), this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.type</code>.
     */
    public final TableField<QaBlogPostsRecord, UInteger> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.content</code>.
     */
    public final TableField<QaBlogPostsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.posted</code>.
     */
    public final TableField<QaBlogPostsRecord, Timestamp> POSTED = createField("posted", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.views</code>.
     */
    public final TableField<QaBlogPostsRecord, UInteger> VIEWS = createField("views", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.updated</code>.
     */
    public final TableField<QaBlogPostsRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.tags</code>.
     */
    public final TableField<QaBlogPostsRecord, String> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.notify</code>.
     */
    public final TableField<QaBlogPostsRecord, String> NOTIFY = createField("notify", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_blog_posts.format</code>.
     */
    public final TableField<QaBlogPostsRecord, String> FORMAT = createField("format", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * Create a <code>DBlorg.qa_blog_posts</code> table reference
     */
    public QaBlogPosts() {
        this(DSL.name("qa_blog_posts"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_blog_posts</code> table reference
     */
    public QaBlogPosts(String alias) {
        this(DSL.name(alias), QA_BLOG_POSTS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_blog_posts</code> table reference
     */
    public QaBlogPosts(Name alias) {
        this(alias, QA_BLOG_POSTS);
    }

    private QaBlogPosts(Name alias, Table<QaBlogPostsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaBlogPosts(Name alias, Table<QaBlogPostsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_BLOG_POSTS_POSTED, Indexes.QA_BLOG_POSTS_PRIMARY, Indexes.QA_BLOG_POSTS_UPDATED);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QaBlogPostsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_QA_BLOG_POSTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QaBlogPostsRecord> getPrimaryKey() {
        return Keys.KEY_QA_BLOG_POSTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaBlogPostsRecord>> getKeys() {
        return Arrays.<UniqueKey<QaBlogPostsRecord>>asList(Keys.KEY_QA_BLOG_POSTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaBlogPosts as(String alias) {
        return new QaBlogPosts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaBlogPosts as(Name alias) {
        return new QaBlogPosts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaBlogPosts rename(String name) {
        return new QaBlogPosts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaBlogPosts rename(Name name) {
        return new QaBlogPosts(name, null);
    }
}
