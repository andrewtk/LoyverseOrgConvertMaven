/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.enums.QaMessagesType;
import DBlorg.tables.pojos.QaMessages;
import DBlorg.tables.records.QaMessagesRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaMessagesDao extends DAOImpl<QaMessagesRecord, QaMessages, UInteger> {

    /**
     * Create a new QaMessagesDao without any configuration
     */
    public QaMessagesDao() {
        super(DBlorg.tables.QaMessages.QA_MESSAGES, QaMessages.class);
    }

    /**
     * Create a new QaMessagesDao with an attached configuration
     */
    public QaMessagesDao(Configuration configuration) {
        super(DBlorg.tables.QaMessages.QA_MESSAGES, QaMessages.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UInteger getId(QaMessages object) {
        return object.getMessageid();
    }

    /**
     * Fetch records that have <code>messageid IN (values)</code>
     */
    public List<QaMessages> fetchByMessageid(UInteger... values) {
        return fetch(DBlorg.tables.QaMessages.QA_MESSAGES.MESSAGEID, values);
    }

    /**
     * Fetch a unique record that has <code>messageid = value</code>
     */
    public QaMessages fetchOneByMessageid(UInteger value) {
        return fetchOne(DBlorg.tables.QaMessages.QA_MESSAGES.MESSAGEID, value);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<QaMessages> fetchByType(QaMessagesType... values) {
        return fetch(DBlorg.tables.QaMessages.QA_MESSAGES.TYPE, values);
    }

    /**
     * Fetch records that have <code>fromuserid IN (values)</code>
     */
    public List<QaMessages> fetchByFromuserid(UInteger... values) {
        return fetch(DBlorg.tables.QaMessages.QA_MESSAGES.FROMUSERID, values);
    }

    /**
     * Fetch records that have <code>touserid IN (values)</code>
     */
    public List<QaMessages> fetchByTouserid(UInteger... values) {
        return fetch(DBlorg.tables.QaMessages.QA_MESSAGES.TOUSERID, values);
    }

    /**
     * Fetch records that have <code>fromhidden IN (values)</code>
     */
    public List<QaMessages> fetchByFromhidden(UByte... values) {
        return fetch(DBlorg.tables.QaMessages.QA_MESSAGES.FROMHIDDEN, values);
    }

    /**
     * Fetch records that have <code>tohidden IN (values)</code>
     */
    public List<QaMessages> fetchByTohidden(UByte... values) {
        return fetch(DBlorg.tables.QaMessages.QA_MESSAGES.TOHIDDEN, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<QaMessages> fetchByContent(String... values) {
        return fetch(DBlorg.tables.QaMessages.QA_MESSAGES.CONTENT, values);
    }

    /**
     * Fetch records that have <code>format IN (values)</code>
     */
    public List<QaMessages> fetchByFormat(String... values) {
        return fetch(DBlorg.tables.QaMessages.QA_MESSAGES.FORMAT, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<QaMessages> fetchByCreated(Timestamp... values) {
        return fetch(DBlorg.tables.QaMessages.QA_MESSAGES.CREATED, values);
    }
}
