/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaCategorymetas;
import DBlorg.tables.records.QaCategorymetasRecord;
import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaCategorymetasDao extends DAOImpl<QaCategorymetasRecord, QaCategorymetas, Record2<UInteger, String>> {

    /**
     * Create a new QaCategorymetasDao without any configuration
     */
    public QaCategorymetasDao() {
        super(DBlorg.tables.QaCategorymetas.QA_CATEGORYMETAS, QaCategorymetas.class);
    }

    /**
     * Create a new QaCategorymetasDao with an attached configuration
     */
    public QaCategorymetasDao(Configuration configuration) {
        super(DBlorg.tables.QaCategorymetas.QA_CATEGORYMETAS, QaCategorymetas.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<UInteger, String> getId(QaCategorymetas object) {
        return compositeKeyRecord(object.getCategoryid(), object.getTitle());
    }

    /**
     * Fetch records that have <code>categoryid IN (values)</code>
     */
    public List<QaCategorymetas> fetchByCategoryid(UInteger... values) {
        return fetch(DBlorg.tables.QaCategorymetas.QA_CATEGORYMETAS.CATEGORYID, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<QaCategorymetas> fetchByTitle(String... values) {
        return fetch(DBlorg.tables.QaCategorymetas.QA_CATEGORYMETAS.TITLE, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<QaCategorymetas> fetchByContent(String... values) {
        return fetch(DBlorg.tables.QaCategorymetas.QA_CATEGORYMETAS.CONTENT, values);
    }
}
