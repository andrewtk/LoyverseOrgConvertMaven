/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaPostmetas;
import DBlorg.tables.records.QaPostmetasRecord;
import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaPostmetasDao extends DAOImpl<QaPostmetasRecord, QaPostmetas, Record2<UInteger, String>> {

    /**
     * Create a new QaPostmetasDao without any configuration
     */
    public QaPostmetasDao() {
        super(DBlorg.tables.QaPostmetas.QA_POSTMETAS, QaPostmetas.class);
    }

    /**
     * Create a new QaPostmetasDao with an attached configuration
     */
    public QaPostmetasDao(Configuration configuration) {
        super(DBlorg.tables.QaPostmetas.QA_POSTMETAS, QaPostmetas.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<UInteger, String> getId(QaPostmetas object) {
        return compositeKeyRecord(object.getPostid(), object.getTitle());
    }

    /**
     * Fetch records that have <code>postid IN (values)</code>
     */
    public List<QaPostmetas> fetchByPostid(UInteger... values) {
        return fetch(DBlorg.tables.QaPostmetas.QA_POSTMETAS.POSTID, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<QaPostmetas> fetchByTitle(String... values) {
        return fetch(DBlorg.tables.QaPostmetas.QA_POSTMETAS.TITLE, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<QaPostmetas> fetchByContent(String... values) {
        return fetch(DBlorg.tables.QaPostmetas.QA_POSTMETAS.CONTENT, values);
    }
}
