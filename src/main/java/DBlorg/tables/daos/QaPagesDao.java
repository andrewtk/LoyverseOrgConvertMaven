/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaPages;
import DBlorg.tables.records.QaPagesRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaPagesDao extends DAOImpl<QaPagesRecord, QaPages, UShort> {

    /**
     * Create a new QaPagesDao without any configuration
     */
    public QaPagesDao() {
        super(DBlorg.tables.QaPages.QA_PAGES, QaPages.class);
    }

    /**
     * Create a new QaPagesDao with an attached configuration
     */
    public QaPagesDao(Configuration configuration) {
        super(DBlorg.tables.QaPages.QA_PAGES, QaPages.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UShort getId(QaPages object) {
        return object.getPageid();
    }

    /**
     * Fetch records that have <code>pageid IN (values)</code>
     */
    public List<QaPages> fetchByPageid(UShort... values) {
        return fetch(DBlorg.tables.QaPages.QA_PAGES.PAGEID, values);
    }

    /**
     * Fetch a unique record that has <code>pageid = value</code>
     */
    public QaPages fetchOneByPageid(UShort value) {
        return fetchOne(DBlorg.tables.QaPages.QA_PAGES.PAGEID, value);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<QaPages> fetchByTitle(String... values) {
        return fetch(DBlorg.tables.QaPages.QA_PAGES.TITLE, values);
    }

    /**
     * Fetch records that have <code>nav IN (values)</code>
     */
    public List<QaPages> fetchByNav(String... values) {
        return fetch(DBlorg.tables.QaPages.QA_PAGES.NAV, values);
    }

    /**
     * Fetch records that have <code>position IN (values)</code>
     */
    public List<QaPages> fetchByPosition(UShort... values) {
        return fetch(DBlorg.tables.QaPages.QA_PAGES.POSITION, values);
    }

    /**
     * Fetch a unique record that has <code>position = value</code>
     */
    public QaPages fetchOneByPosition(UShort value) {
        return fetchOne(DBlorg.tables.QaPages.QA_PAGES.POSITION, value);
    }

    /**
     * Fetch records that have <code>flags IN (values)</code>
     */
    public List<QaPages> fetchByFlags(UByte... values) {
        return fetch(DBlorg.tables.QaPages.QA_PAGES.FLAGS, values);
    }

    /**
     * Fetch records that have <code>permit IN (values)</code>
     */
    public List<QaPages> fetchByPermit(UByte... values) {
        return fetch(DBlorg.tables.QaPages.QA_PAGES.PERMIT, values);
    }

    /**
     * Fetch records that have <code>tags IN (values)</code>
     */
    public List<QaPages> fetchByTags(String... values) {
        return fetch(DBlorg.tables.QaPages.QA_PAGES.TAGS, values);
    }

    /**
     * Fetch records that have <code>heading IN (values)</code>
     */
    public List<QaPages> fetchByHeading(String... values) {
        return fetch(DBlorg.tables.QaPages.QA_PAGES.HEADING, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<QaPages> fetchByContent(String... values) {
        return fetch(DBlorg.tables.QaPages.QA_PAGES.CONTENT, values);
    }
}
