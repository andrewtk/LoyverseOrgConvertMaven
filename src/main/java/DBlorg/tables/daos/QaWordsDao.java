/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaWords;
import DBlorg.tables.records.QaWordsRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaWordsDao extends DAOImpl<QaWordsRecord, QaWords, UInteger> {

    /**
     * Create a new QaWordsDao without any configuration
     */
    public QaWordsDao() {
        super(DBlorg.tables.QaWords.QA_WORDS, QaWords.class);
    }

    /**
     * Create a new QaWordsDao with an attached configuration
     */
    public QaWordsDao(Configuration configuration) {
        super(DBlorg.tables.QaWords.QA_WORDS, QaWords.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UInteger getId(QaWords object) {
        return object.getWordid();
    }

    /**
     * Fetch records that have <code>wordid IN (values)</code>
     */
    public List<QaWords> fetchByWordid(UInteger... values) {
        return fetch(DBlorg.tables.QaWords.QA_WORDS.WORDID, values);
    }

    /**
     * Fetch a unique record that has <code>wordid = value</code>
     */
    public QaWords fetchOneByWordid(UInteger value) {
        return fetchOne(DBlorg.tables.QaWords.QA_WORDS.WORDID, value);
    }

    /**
     * Fetch records that have <code>word IN (values)</code>
     */
    public List<QaWords> fetchByWord(String... values) {
        return fetch(DBlorg.tables.QaWords.QA_WORDS.WORD, values);
    }

    /**
     * Fetch records that have <code>titlecount IN (values)</code>
     */
    public List<QaWords> fetchByTitlecount(UInteger... values) {
        return fetch(DBlorg.tables.QaWords.QA_WORDS.TITLECOUNT, values);
    }

    /**
     * Fetch records that have <code>contentcount IN (values)</code>
     */
    public List<QaWords> fetchByContentcount(UInteger... values) {
        return fetch(DBlorg.tables.QaWords.QA_WORDS.CONTENTCOUNT, values);
    }

    /**
     * Fetch records that have <code>tagwordcount IN (values)</code>
     */
    public List<QaWords> fetchByTagwordcount(UInteger... values) {
        return fetch(DBlorg.tables.QaWords.QA_WORDS.TAGWORDCOUNT, values);
    }

    /**
     * Fetch records that have <code>tagcount IN (values)</code>
     */
    public List<QaWords> fetchByTagcount(UInteger... values) {
        return fetch(DBlorg.tables.QaWords.QA_WORDS.TAGCOUNT, values);
    }
}
