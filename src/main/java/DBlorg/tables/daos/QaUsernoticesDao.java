/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaUsernotices;
import DBlorg.tables.records.QaUsernoticesRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaUsernoticesDao extends DAOImpl<QaUsernoticesRecord, QaUsernotices, UInteger> {

    /**
     * Create a new QaUsernoticesDao without any configuration
     */
    public QaUsernoticesDao() {
        super(DBlorg.tables.QaUsernotices.QA_USERNOTICES, QaUsernotices.class);
    }

    /**
     * Create a new QaUsernoticesDao with an attached configuration
     */
    public QaUsernoticesDao(Configuration configuration) {
        super(DBlorg.tables.QaUsernotices.QA_USERNOTICES, QaUsernotices.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UInteger getId(QaUsernotices object) {
        return object.getNoticeid();
    }

    /**
     * Fetch records that have <code>noticeid IN (values)</code>
     */
    public List<QaUsernotices> fetchByNoticeid(UInteger... values) {
        return fetch(DBlorg.tables.QaUsernotices.QA_USERNOTICES.NOTICEID, values);
    }

    /**
     * Fetch a unique record that has <code>noticeid = value</code>
     */
    public QaUsernotices fetchOneByNoticeid(UInteger value) {
        return fetchOne(DBlorg.tables.QaUsernotices.QA_USERNOTICES.NOTICEID, value);
    }

    /**
     * Fetch records that have <code>userid IN (values)</code>
     */
    public List<QaUsernotices> fetchByUserid(String... values) {
        return fetch(DBlorg.tables.QaUsernotices.QA_USERNOTICES.USERID, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<QaUsernotices> fetchByContent(String... values) {
        return fetch(DBlorg.tables.QaUsernotices.QA_USERNOTICES.CONTENT, values);
    }

    /**
     * Fetch records that have <code>format IN (values)</code>
     */
    public List<QaUsernotices> fetchByFormat(String... values) {
        return fetch(DBlorg.tables.QaUsernotices.QA_USERNOTICES.FORMAT, values);
    }

    /**
     * Fetch records that have <code>tags IN (values)</code>
     */
    public List<QaUsernotices> fetchByTags(String... values) {
        return fetch(DBlorg.tables.QaUsernotices.QA_USERNOTICES.TAGS, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<QaUsernotices> fetchByCreated(Timestamp... values) {
        return fetch(DBlorg.tables.QaUsernotices.QA_USERNOTICES.CREATED, values);
    }
}
