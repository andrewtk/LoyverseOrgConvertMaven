/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaUserbadges;
import DBlorg.tables.records.QaUserbadgesRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaUserbadgesDao extends DAOImpl<QaUserbadgesRecord, QaUserbadges, Integer> {

    /**
     * Create a new QaUserbadgesDao without any configuration
     */
    public QaUserbadgesDao() {
        super(DBlorg.tables.QaUserbadges.QA_USERBADGES, QaUserbadges.class);
    }

    /**
     * Create a new QaUserbadgesDao with an attached configuration
     */
    public QaUserbadgesDao(Configuration configuration) {
        super(DBlorg.tables.QaUserbadges.QA_USERBADGES, QaUserbadges.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(QaUserbadges object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>awarded_at IN (values)</code>
     */
    public List<QaUserbadges> fetchByAwardedAt(Timestamp... values) {
        return fetch(DBlorg.tables.QaUserbadges.QA_USERBADGES.AWARDED_AT, values);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<QaUserbadges> fetchByUserId(Integer... values) {
        return fetch(DBlorg.tables.QaUserbadges.QA_USERBADGES.USER_ID, values);
    }

    /**
     * Fetch records that have <code>notify IN (values)</code>
     */
    public List<QaUserbadges> fetchByNotify(Byte... values) {
        return fetch(DBlorg.tables.QaUserbadges.QA_USERBADGES.NOTIFY, values);
    }

    /**
     * Fetch records that have <code>object_id IN (values)</code>
     */
    public List<QaUserbadges> fetchByObjectId(Integer... values) {
        return fetch(DBlorg.tables.QaUserbadges.QA_USERBADGES.OBJECT_ID, values);
    }

    /**
     * Fetch records that have <code>badge_slug IN (values)</code>
     */
    public List<QaUserbadges> fetchByBadgeSlug(String... values) {
        return fetch(DBlorg.tables.QaUserbadges.QA_USERBADGES.BADGE_SLUG, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<QaUserbadges> fetchById(Integer... values) {
        return fetch(DBlorg.tables.QaUserbadges.QA_USERBADGES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public QaUserbadges fetchOneById(Integer value) {
        return fetchOne(DBlorg.tables.QaUserbadges.QA_USERBADGES.ID, value);
    }
}
