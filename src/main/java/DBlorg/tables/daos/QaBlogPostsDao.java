/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaBlogPosts;
import DBlorg.tables.records.QaBlogPostsRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaBlogPostsDao extends DAOImpl<QaBlogPostsRecord, QaBlogPosts, UInteger> {

    /**
     * Create a new QaBlogPostsDao without any configuration
     */
    public QaBlogPostsDao() {
        super(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS, QaBlogPosts.class);
    }

    /**
     * Create a new QaBlogPostsDao with an attached configuration
     */
    public QaBlogPostsDao(Configuration configuration) {
        super(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS, QaBlogPosts.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UInteger getId(QaBlogPosts object) {
        return object.getPostid();
    }

    /**
     * Fetch records that have <code>postid IN (values)</code>
     */
    public List<QaBlogPosts> fetchByPostid(UInteger... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.POSTID, values);
    }

    /**
     * Fetch a unique record that has <code>postid = value</code>
     */
    public QaBlogPosts fetchOneByPostid(UInteger value) {
        return fetchOne(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.POSTID, value);
    }

    /**
     * Fetch records that have <code>userid IN (values)</code>
     */
    public List<QaBlogPosts> fetchByUserid(UInteger... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.USERID, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<QaBlogPosts> fetchByTitle(String... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.TITLE, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<QaBlogPosts> fetchByType(UInteger... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.TYPE, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<QaBlogPosts> fetchByContent(String... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.CONTENT, values);
    }

    /**
     * Fetch records that have <code>posted IN (values)</code>
     */
    public List<QaBlogPosts> fetchByPosted(Timestamp... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.POSTED, values);
    }

    /**
     * Fetch records that have <code>views IN (values)</code>
     */
    public List<QaBlogPosts> fetchByViews(UInteger... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.VIEWS, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<QaBlogPosts> fetchByUpdated(Timestamp... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.UPDATED, values);
    }

    /**
     * Fetch records that have <code>tags IN (values)</code>
     */
    public List<QaBlogPosts> fetchByTags(String... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.TAGS, values);
    }

    /**
     * Fetch records that have <code>notify IN (values)</code>
     */
    public List<QaBlogPosts> fetchByNotify(String... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.NOTIFY, values);
    }

    /**
     * Fetch records that have <code>format IN (values)</code>
     */
    public List<QaBlogPosts> fetchByFormat(String... values) {
        return fetch(DBlorg.tables.QaBlogPosts.QA_BLOG_POSTS.FORMAT, values);
    }
}
