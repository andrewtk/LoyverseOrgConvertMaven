/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaUserfavorites;
import DBlorg.tables.records.QaUserfavoritesRecord;
import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaUserfavoritesDao extends DAOImpl<QaUserfavoritesRecord, QaUserfavorites, Record3<String, String, UInteger>> {

    /**
     * Create a new QaUserfavoritesDao without any configuration
     */
    public QaUserfavoritesDao() {
        super(DBlorg.tables.QaUserfavorites.QA_USERFAVORITES, QaUserfavorites.class);
    }

    /**
     * Create a new QaUserfavoritesDao with an attached configuration
     */
    public QaUserfavoritesDao(Configuration configuration) {
        super(DBlorg.tables.QaUserfavorites.QA_USERFAVORITES, QaUserfavorites.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record3<String, String, UInteger> getId(QaUserfavorites object) {
        return compositeKeyRecord(object.getUserid(), object.getEntitytype(), object.getEntityid());
    }

    /**
     * Fetch records that have <code>userid IN (values)</code>
     */
    public List<QaUserfavorites> fetchByUserid(String... values) {
        return fetch(DBlorg.tables.QaUserfavorites.QA_USERFAVORITES.USERID, values);
    }

    /**
     * Fetch records that have <code>entitytype IN (values)</code>
     */
    public List<QaUserfavorites> fetchByEntitytype(String... values) {
        return fetch(DBlorg.tables.QaUserfavorites.QA_USERFAVORITES.ENTITYTYPE, values);
    }

    /**
     * Fetch records that have <code>entityid IN (values)</code>
     */
    public List<QaUserfavorites> fetchByEntityid(UInteger... values) {
        return fetch(DBlorg.tables.QaUserfavorites.QA_USERFAVORITES.ENTITYID, values);
    }

    /**
     * Fetch records that have <code>nouserevents IN (values)</code>
     */
    public List<QaUserfavorites> fetchByNouserevents(UByte... values) {
        return fetch(DBlorg.tables.QaUserfavorites.QA_USERFAVORITES.NOUSEREVENTS, values);
    }
}
