/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaWidgets;
import DBlorg.tables.records.QaWidgetsRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaWidgetsDao extends DAOImpl<QaWidgetsRecord, QaWidgets, UShort> {

    /**
     * Create a new QaWidgetsDao without any configuration
     */
    public QaWidgetsDao() {
        super(DBlorg.tables.QaWidgets.QA_WIDGETS, QaWidgets.class);
    }

    /**
     * Create a new QaWidgetsDao with an attached configuration
     */
    public QaWidgetsDao(Configuration configuration) {
        super(DBlorg.tables.QaWidgets.QA_WIDGETS, QaWidgets.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UShort getId(QaWidgets object) {
        return object.getWidgetid();
    }

    /**
     * Fetch records that have <code>widgetid IN (values)</code>
     */
    public List<QaWidgets> fetchByWidgetid(UShort... values) {
        return fetch(DBlorg.tables.QaWidgets.QA_WIDGETS.WIDGETID, values);
    }

    /**
     * Fetch a unique record that has <code>widgetid = value</code>
     */
    public QaWidgets fetchOneByWidgetid(UShort value) {
        return fetchOne(DBlorg.tables.QaWidgets.QA_WIDGETS.WIDGETID, value);
    }

    /**
     * Fetch records that have <code>place IN (values)</code>
     */
    public List<QaWidgets> fetchByPlace(String... values) {
        return fetch(DBlorg.tables.QaWidgets.QA_WIDGETS.PLACE, values);
    }

    /**
     * Fetch records that have <code>position IN (values)</code>
     */
    public List<QaWidgets> fetchByPosition(UShort... values) {
        return fetch(DBlorg.tables.QaWidgets.QA_WIDGETS.POSITION, values);
    }

    /**
     * Fetch a unique record that has <code>position = value</code>
     */
    public QaWidgets fetchOneByPosition(UShort value) {
        return fetchOne(DBlorg.tables.QaWidgets.QA_WIDGETS.POSITION, value);
    }

    /**
     * Fetch records that have <code>tags IN (values)</code>
     */
    public List<QaWidgets> fetchByTags(String... values) {
        return fetch(DBlorg.tables.QaWidgets.QA_WIDGETS.TAGS, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<QaWidgets> fetchByTitle(String... values) {
        return fetch(DBlorg.tables.QaWidgets.QA_WIDGETS.TITLE, values);
    }
}
