/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaUserfields;
import DBlorg.tables.records.QaUserfieldsRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaUserfieldsDao extends DAOImpl<QaUserfieldsRecord, QaUserfields, UShort> {

    /**
     * Create a new QaUserfieldsDao without any configuration
     */
    public QaUserfieldsDao() {
        super(DBlorg.tables.QaUserfields.QA_USERFIELDS, QaUserfields.class);
    }

    /**
     * Create a new QaUserfieldsDao with an attached configuration
     */
    public QaUserfieldsDao(Configuration configuration) {
        super(DBlorg.tables.QaUserfields.QA_USERFIELDS, QaUserfields.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UShort getId(QaUserfields object) {
        return object.getFieldid();
    }

    /**
     * Fetch records that have <code>fieldid IN (values)</code>
     */
    public List<QaUserfields> fetchByFieldid(UShort... values) {
        return fetch(DBlorg.tables.QaUserfields.QA_USERFIELDS.FIELDID, values);
    }

    /**
     * Fetch a unique record that has <code>fieldid = value</code>
     */
    public QaUserfields fetchOneByFieldid(UShort value) {
        return fetchOne(DBlorg.tables.QaUserfields.QA_USERFIELDS.FIELDID, value);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<QaUserfields> fetchByTitle(String... values) {
        return fetch(DBlorg.tables.QaUserfields.QA_USERFIELDS.TITLE, values);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<QaUserfields> fetchByContent(String... values) {
        return fetch(DBlorg.tables.QaUserfields.QA_USERFIELDS.CONTENT, values);
    }

    /**
     * Fetch records that have <code>position IN (values)</code>
     */
    public List<QaUserfields> fetchByPosition(UShort... values) {
        return fetch(DBlorg.tables.QaUserfields.QA_USERFIELDS.POSITION, values);
    }

    /**
     * Fetch records that have <code>flags IN (values)</code>
     */
    public List<QaUserfields> fetchByFlags(UByte... values) {
        return fetch(DBlorg.tables.QaUserfields.QA_USERFIELDS.FLAGS, values);
    }

    /**
     * Fetch records that have <code>permit IN (values)</code>
     */
    public List<QaUserfields> fetchByPermit(UByte... values) {
        return fetch(DBlorg.tables.QaUserfields.QA_USERFIELDS.PERMIT, values);
    }
}
