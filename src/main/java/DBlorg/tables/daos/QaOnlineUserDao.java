/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaOnlineUser;
import DBlorg.tables.records.QaOnlineUserRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaOnlineUserDao extends DAOImpl<QaOnlineUserRecord, QaOnlineUser, Integer> {

    /**
     * Create a new QaOnlineUserDao without any configuration
     */
    public QaOnlineUserDao() {
        super(DBlorg.tables.QaOnlineUser.QA_ONLINE_USER, QaOnlineUser.class);
    }

    /**
     * Create a new QaOnlineUserDao with an attached configuration
     */
    public QaOnlineUserDao(Configuration configuration) {
        super(DBlorg.tables.QaOnlineUser.QA_ONLINE_USER, QaOnlineUser.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(QaOnlineUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<QaOnlineUser> fetchById(Integer... values) {
        return fetch(DBlorg.tables.QaOnlineUser.QA_ONLINE_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public QaOnlineUser fetchOneById(Integer value) {
        return fetchOne(DBlorg.tables.QaOnlineUser.QA_ONLINE_USER.ID, value);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<QaOnlineUser> fetchByUserId(Integer... values) {
        return fetch(DBlorg.tables.QaOnlineUser.QA_ONLINE_USER.USER_ID, values);
    }

    /**
     * Fetch records that have <code>ip IN (values)</code>
     */
    public List<QaOnlineUser> fetchByIp(String... values) {
        return fetch(DBlorg.tables.QaOnlineUser.QA_ONLINE_USER.IP, values);
    }

    /**
     * Fetch records that have <code>last_activity IN (values)</code>
     */
    public List<QaOnlineUser> fetchByLastActivity(Timestamp... values) {
        return fetch(DBlorg.tables.QaOnlineUser.QA_ONLINE_USER.LAST_ACTIVITY, values);
    }
}
