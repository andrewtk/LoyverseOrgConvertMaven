/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.tables.pojos.QaBlogUsers;
import DBlorg.tables.records.QaBlogUsersRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaBlogUsersDao extends DAOImpl<QaBlogUsersRecord, QaBlogUsers, UInteger> {

    /**
     * Create a new QaBlogUsersDao without any configuration
     */
    public QaBlogUsersDao() {
        super(DBlorg.tables.QaBlogUsers.QA_BLOG_USERS, QaBlogUsers.class);
    }

    /**
     * Create a new QaBlogUsersDao with an attached configuration
     */
    public QaBlogUsersDao(Configuration configuration) {
        super(DBlorg.tables.QaBlogUsers.QA_BLOG_USERS, QaBlogUsers.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UInteger getId(QaBlogUsers object) {
        return object.getUserid();
    }

    /**
     * Fetch records that have <code>userid IN (values)</code>
     */
    public List<QaBlogUsers> fetchByUserid(UInteger... values) {
        return fetch(DBlorg.tables.QaBlogUsers.QA_BLOG_USERS.USERID, values);
    }

    /**
     * Fetch a unique record that has <code>userid = value</code>
     */
    public QaBlogUsers fetchOneByUserid(UInteger value) {
        return fetchOne(DBlorg.tables.QaBlogUsers.QA_BLOG_USERS.USERID, value);
    }

    /**
     * Fetch records that have <code>lastposted IN (values)</code>
     */
    public List<QaBlogUsers> fetchByLastposted(Timestamp... values) {
        return fetch(DBlorg.tables.QaBlogUsers.QA_BLOG_USERS.LASTPOSTED, values);
    }

    /**
     * Fetch records that have <code>lastpolled IN (values)</code>
     */
    public List<QaBlogUsers> fetchByLastpolled(Timestamp... values) {
        return fetch(DBlorg.tables.QaBlogUsers.QA_BLOG_USERS.LASTPOLLED, values);
    }

    /**
     * Fetch records that have <code>kickeduntil IN (values)</code>
     */
    public List<QaBlogUsers> fetchByKickeduntil(Timestamp... values) {
        return fetch(DBlorg.tables.QaBlogUsers.QA_BLOG_USERS.KICKEDUNTIL, values);
    }
}
