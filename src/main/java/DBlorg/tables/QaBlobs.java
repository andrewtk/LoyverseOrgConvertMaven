/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaBlobsRecord;
import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaBlobs extends TableImpl<QaBlobsRecord> {

    private static final long serialVersionUID = 1464824773;

    /**
     * The reference instance of <code>DBlorg.qa_blobs</code>
     */
    public static final QaBlobs QA_BLOBS = new QaBlobs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaBlobsRecord> getRecordType() {
        return QaBlobsRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_blobs.blobid</code>.
     */
    public final TableField<QaBlobsRecord, ULong> BLOBID = createField("blobid", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_blobs.format</code>.
     */
    public final TableField<QaBlobsRecord, String> FORMAT = createField("format", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_blobs.content</code>.
     */
    public final TableField<QaBlobsRecord, byte[]> CONTENT = createField("content", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>DBlorg.qa_blobs.filename</code>.
     */
    public final TableField<QaBlobsRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>DBlorg.qa_blobs.userid</code>.
     */
    public final TableField<QaBlobsRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>DBlorg.qa_blobs.cookieid</code>.
     */
    public final TableField<QaBlobsRecord, ULong> COOKIEID = createField("cookieid", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_blobs.createip</code>.
     */
    public final TableField<QaBlobsRecord, UInteger> CREATEIP = createField("createip", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_blobs.created</code>.
     */
    public final TableField<QaBlobsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>DBlorg.qa_blobs</code> table reference
     */
    public QaBlobs() {
        this(DSL.name("qa_blobs"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_blobs</code> table reference
     */
    public QaBlobs(String alias) {
        this(DSL.name(alias), QA_BLOBS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_blobs</code> table reference
     */
    public QaBlobs(Name alias) {
        this(alias, QA_BLOBS);
    }

    private QaBlobs(Name alias, Table<QaBlobsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaBlobs(Name alias, Table<QaBlobsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_BLOBS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QaBlobsRecord> getPrimaryKey() {
        return Keys.KEY_QA_BLOBS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaBlobsRecord>> getKeys() {
        return Arrays.<UniqueKey<QaBlobsRecord>>asList(Keys.KEY_QA_BLOBS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaBlobs as(String alias) {
        return new QaBlobs(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaBlobs as(Name alias) {
        return new QaBlobs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaBlobs rename(String name) {
        return new QaBlobs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaBlobs rename(Name name) {
        return new QaBlobs(name, null);
    }
}
