/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaTagwordsRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaTagwords extends TableImpl<QaTagwordsRecord> {

    private static final long serialVersionUID = 104595810;

    /**
     * The reference instance of <code>DBlorg.qa_tagwords</code>
     */
    public static final QaTagwords QA_TAGWORDS = new QaTagwords();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaTagwordsRecord> getRecordType() {
        return QaTagwordsRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_tagwords.postid</code>.
     */
    public final TableField<QaTagwordsRecord, UInteger> POSTID = createField("postid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_tagwords.wordid</code>.
     */
    public final TableField<QaTagwordsRecord, UInteger> WORDID = createField("wordid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>DBlorg.qa_tagwords</code> table reference
     */
    public QaTagwords() {
        this(DSL.name("qa_tagwords"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_tagwords</code> table reference
     */
    public QaTagwords(String alias) {
        this(DSL.name(alias), QA_TAGWORDS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_tagwords</code> table reference
     */
    public QaTagwords(Name alias) {
        this(alias, QA_TAGWORDS);
    }

    private QaTagwords(Name alias, Table<QaTagwordsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaTagwords(Name alias, Table<QaTagwordsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_TAGWORDS_POSTID, Indexes.QA_TAGWORDS_WORDID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QaTagwordsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QaTagwordsRecord, ?>>asList(Keys.QA_TAGWORDS_IBFK_1, Keys.QA_TAGWORDS_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaTagwords as(String alias) {
        return new QaTagwords(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaTagwords as(Name alias) {
        return new QaTagwords(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaTagwords rename(String name) {
        return new QaTagwords(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaTagwords rename(Name name) {
        return new QaTagwords(name, null);
    }
}
