/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.enums.QaMessagesType;
import DBlorg.tables.records.QaMessagesRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaMessages extends TableImpl<QaMessagesRecord> {

    private static final long serialVersionUID = -1719834607;

    /**
     * The reference instance of <code>DBlorg.qa_messages</code>
     */
    public static final QaMessages QA_MESSAGES = new QaMessages();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaMessagesRecord> getRecordType() {
        return QaMessagesRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_messages.messageid</code>.
     */
    public final TableField<QaMessagesRecord, UInteger> MESSAGEID = createField("messageid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>DBlorg.qa_messages.type</code>.
     */
    public final TableField<QaMessagesRecord, QaMessagesType> TYPE = createField("type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(QaMessagesType.class), this, "");

    /**
     * The column <code>DBlorg.qa_messages.fromuserid</code>.
     */
    public final TableField<QaMessagesRecord, UInteger> FROMUSERID = createField("fromuserid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_messages.touserid</code>.
     */
    public final TableField<QaMessagesRecord, UInteger> TOUSERID = createField("touserid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_messages.fromhidden</code>.
     */
    public final TableField<QaMessagesRecord, UByte> FROMHIDDEN = createField("fromhidden", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>DBlorg.qa_messages.tohidden</code>.
     */
    public final TableField<QaMessagesRecord, UByte> TOHIDDEN = createField("tohidden", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>DBlorg.qa_messages.content</code>.
     */
    public final TableField<QaMessagesRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(8000).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_messages.format</code>.
     */
    public final TableField<QaMessagesRecord, String> FORMAT = createField("format", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_messages.created</code>.
     */
    public final TableField<QaMessagesRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>DBlorg.qa_messages</code> table reference
     */
    public QaMessages() {
        this(DSL.name("qa_messages"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_messages</code> table reference
     */
    public QaMessages(String alias) {
        this(DSL.name(alias), QA_MESSAGES);
    }

    /**
     * Create an aliased <code>DBlorg.qa_messages</code> table reference
     */
    public QaMessages(Name alias) {
        this(alias, QA_MESSAGES);
    }

    private QaMessages(Name alias, Table<QaMessagesRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaMessages(Name alias, Table<QaMessagesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_MESSAGES_FROMHIDDEN, Indexes.QA_MESSAGES_PRIMARY, Indexes.QA_MESSAGES_TOHIDDEN, Indexes.QA_MESSAGES_TOUSERID, Indexes.QA_MESSAGES_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QaMessagesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_QA_MESSAGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QaMessagesRecord> getPrimaryKey() {
        return Keys.KEY_QA_MESSAGES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaMessagesRecord>> getKeys() {
        return Arrays.<UniqueKey<QaMessagesRecord>>asList(Keys.KEY_QA_MESSAGES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaMessages as(String alias) {
        return new QaMessages(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaMessages as(Name alias) {
        return new QaMessages(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaMessages rename(String name) {
        return new QaMessages(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaMessages rename(Name name) {
        return new QaMessages(name, null);
    }
}
