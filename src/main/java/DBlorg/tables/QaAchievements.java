/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaAchievementsRecord;
import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaAchievements extends TableImpl<QaAchievementsRecord> {

    private static final long serialVersionUID = -321319670;

    /**
     * The reference instance of <code>DBlorg.qa_achievements</code>
     */
    public static final QaAchievements QA_ACHIEVEMENTS = new QaAchievements();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaAchievementsRecord> getRecordType() {
        return QaAchievementsRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_achievements.user_id</code>.
     */
    public final TableField<QaAchievementsRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_achievements.first_visit</code>.
     */
    public final TableField<QaAchievementsRecord, Timestamp> FIRST_VISIT = createField("first_visit", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>DBlorg.qa_achievements.oldest_consec_visit</code>.
     */
    public final TableField<QaAchievementsRecord, Timestamp> OLDEST_CONSEC_VISIT = createField("oldest_consec_visit", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>DBlorg.qa_achievements.longest_consec_visit</code>.
     */
    public final TableField<QaAchievementsRecord, Integer> LONGEST_CONSEC_VISIT = createField("longest_consec_visit", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>DBlorg.qa_achievements.last_visit</code>.
     */
    public final TableField<QaAchievementsRecord, Timestamp> LAST_VISIT = createField("last_visit", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>DBlorg.qa_achievements.total_days_visited</code>.
     */
    public final TableField<QaAchievementsRecord, Integer> TOTAL_DAYS_VISITED = createField("total_days_visited", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>DBlorg.qa_achievements.questions_read</code>.
     */
    public final TableField<QaAchievementsRecord, Integer> QUESTIONS_READ = createField("questions_read", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>DBlorg.qa_achievements.posts_edited</code>.
     */
    public final TableField<QaAchievementsRecord, Integer> POSTS_EDITED = createField("posts_edited", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>DBlorg.qa_achievements</code> table reference
     */
    public QaAchievements() {
        this(DSL.name("qa_achievements"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_achievements</code> table reference
     */
    public QaAchievements(String alias) {
        this(DSL.name(alias), QA_ACHIEVEMENTS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_achievements</code> table reference
     */
    public QaAchievements(Name alias) {
        this(alias, QA_ACHIEVEMENTS);
    }

    private QaAchievements(Name alias, Table<QaAchievementsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaAchievements(Name alias, Table<QaAchievementsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_ACHIEVEMENTS_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaAchievementsRecord>> getKeys() {
        return Arrays.<UniqueKey<QaAchievementsRecord>>asList(Keys.KEY_QA_ACHIEVEMENTS_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaAchievements as(String alias) {
        return new QaAchievements(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaAchievements as(Name alias) {
        return new QaAchievements(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaAchievements rename(String name) {
        return new QaAchievements(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaAchievements rename(Name name) {
        return new QaAchievements(name, null);
    }
}
