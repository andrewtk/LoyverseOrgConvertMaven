/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables.records;


import javax.annotation.Generated;

import DBlorg.tables.QaOptions;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaOptionsRecord extends UpdatableRecordImpl<QaOptionsRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1570670118;

    /**
     * Setter for <code>DBlorg.qa_options.title</code>.
     */
    public void setTitle(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>DBlorg.qa_options.title</code>.
     */
    public String getTitle() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DBlorg.qa_options.content</code>.
     */
    public void setContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>DBlorg.qa_options.content</code>.
     */
    public String getContent() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return QaOptions.QA_OPTIONS.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return QaOptions.QA_OPTIONS.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaOptionsRecord value1(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaOptionsRecord value2(String value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaOptionsRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QaOptionsRecord
     */
    public QaOptionsRecord() {
        super(QaOptions.QA_OPTIONS);
    }

    /**
     * Create a detached, initialised QaOptionsRecord
     */
    public QaOptionsRecord(String title, String content) {
        super(QaOptions.QA_OPTIONS);

        set(0, title);
        set(1, content);
    }
}
