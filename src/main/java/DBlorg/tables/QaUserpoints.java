/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaUserpointsRecord;
import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaUserpoints extends TableImpl<QaUserpointsRecord> {

    private static final long serialVersionUID = -2039578716;

    /**
     * The reference instance of <code>DBlorg.qa_userpoints</code>
     */
    public static final QaUserpoints QA_USERPOINTS = new QaUserpoints();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaUserpointsRecord> getRecordType() {
        return QaUserpointsRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_userpoints.userid</code>.
     */
    public final TableField<QaUserpointsRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.points</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> POINTS = createField("points", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.qposts</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> QPOSTS = createField("qposts", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.aposts</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> APOSTS = createField("aposts", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.cposts</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> CPOSTS = createField("cposts", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.aselects</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> ASELECTS = createField("aselects", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.aselecteds</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> ASELECTEDS = createField("aselecteds", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.qupvotes</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> QUPVOTES = createField("qupvotes", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.qdownvotes</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> QDOWNVOTES = createField("qdownvotes", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.aupvotes</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> AUPVOTES = createField("aupvotes", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.adownvotes</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> ADOWNVOTES = createField("adownvotes", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.qvoteds</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> QVOTEDS = createField("qvoteds", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.avoteds</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> AVOTEDS = createField("avoteds", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.upvoteds</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> UPVOTEDS = createField("upvoteds", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.downvoteds</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> DOWNVOTEDS = createField("downvoteds", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>DBlorg.qa_userpoints.bonus</code>.
     */
    public final TableField<QaUserpointsRecord, Integer> BONUS = createField("bonus", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>DBlorg.qa_userpoints</code> table reference
     */
    public QaUserpoints() {
        this(DSL.name("qa_userpoints"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_userpoints</code> table reference
     */
    public QaUserpoints(String alias) {
        this(DSL.name(alias), QA_USERPOINTS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_userpoints</code> table reference
     */
    public QaUserpoints(Name alias) {
        this(alias, QA_USERPOINTS);
    }

    private QaUserpoints(Name alias, Table<QaUserpointsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaUserpoints(Name alias, Table<QaUserpointsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_USERPOINTS_POINTS, Indexes.QA_USERPOINTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QaUserpointsRecord> getPrimaryKey() {
        return Keys.KEY_QA_USERPOINTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaUserpointsRecord>> getKeys() {
        return Arrays.<UniqueKey<QaUserpointsRecord>>asList(Keys.KEY_QA_USERPOINTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUserpoints as(String alias) {
        return new QaUserpoints(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaUserpoints as(Name alias) {
        return new QaUserpoints(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUserpoints rename(String name) {
        return new QaUserpoints(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaUserpoints rename(Name name) {
        return new QaUserpoints(name, null);
    }
}
