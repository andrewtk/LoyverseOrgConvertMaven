/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaIplimitsRecord;
import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaIplimits extends TableImpl<QaIplimitsRecord> {

    private static final long serialVersionUID = 575800695;

    /**
     * The reference instance of <code>DBlorg.qa_iplimits</code>
     */
    public static final QaIplimits QA_IPLIMITS = new QaIplimits();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaIplimitsRecord> getRecordType() {
        return QaIplimitsRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_iplimits.ip</code>.
     */
    public final TableField<QaIplimitsRecord, UInteger> IP = createField("ip", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_iplimits.action</code>.
     */
    public final TableField<QaIplimitsRecord, String> ACTION = createField("action", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_iplimits.period</code>.
     */
    public final TableField<QaIplimitsRecord, UInteger> PERIOD = createField("period", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_iplimits.count</code>.
     */
    public final TableField<QaIplimitsRecord, UShort> COUNT = createField("count", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>DBlorg.qa_iplimits</code> table reference
     */
    public QaIplimits() {
        this(DSL.name("qa_iplimits"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_iplimits</code> table reference
     */
    public QaIplimits(String alias) {
        this(DSL.name(alias), QA_IPLIMITS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_iplimits</code> table reference
     */
    public QaIplimits(Name alias) {
        this(alias, QA_IPLIMITS);
    }

    private QaIplimits(Name alias, Table<QaIplimitsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaIplimits(Name alias, Table<QaIplimitsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_IPLIMITS_IP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaIplimitsRecord>> getKeys() {
        return Arrays.<UniqueKey<QaIplimitsRecord>>asList(Keys.KEY_QA_IPLIMITS_IP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaIplimits as(String alias) {
        return new QaIplimits(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaIplimits as(Name alias) {
        return new QaIplimits(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaIplimits rename(String name) {
        return new QaIplimits(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaIplimits rename(Name name) {
        return new QaIplimits(name, null);
    }
}
