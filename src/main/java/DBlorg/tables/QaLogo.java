/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.tables.records.QaLogoRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaLogo extends TableImpl<QaLogoRecord> {

    private static final long serialVersionUID = -860929728;

    /**
     * The reference instance of <code>DBlorg.qa_logo</code>
     */
    public static final QaLogo QA_LOGO = new QaLogo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaLogoRecord> getRecordType() {
        return QaLogoRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_logo.id</code>.
     */
    public final TableField<QaLogoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>DBlorg.qa_logo.userid</code>.
     */
    public final TableField<QaLogoRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_logo.logourl</code>.
     */
    public final TableField<QaLogoRecord, String> LOGOURL = createField("logourl", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>DBlorg.qa_logo</code> table reference
     */
    public QaLogo() {
        this(DSL.name("qa_logo"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_logo</code> table reference
     */
    public QaLogo(String alias) {
        this(DSL.name(alias), QA_LOGO);
    }

    /**
     * Create an aliased <code>DBlorg.qa_logo</code> table reference
     */
    public QaLogo(Name alias) {
        this(alias, QA_LOGO);
    }

    private QaLogo(Name alias, Table<QaLogoRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaLogo(Name alias, Table<QaLogoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_LOGO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QaLogoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_QA_LOGO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QaLogoRecord> getPrimaryKey() {
        return Keys.KEY_QA_LOGO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaLogoRecord>> getKeys() {
        return Arrays.<UniqueKey<QaLogoRecord>>asList(Keys.KEY_QA_LOGO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaLogo as(String alias) {
        return new QaLogo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaLogo as(Name alias) {
        return new QaLogo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaLogo rename(String name) {
        return new QaLogo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaLogo rename(Name name) {
        return new QaLogo(name, null);
    }
}
