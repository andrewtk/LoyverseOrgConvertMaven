/*
 * This file is generated by jOOQ.
*/
package DBlorg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import DBlorg.Indexes;
import DBlorg.Keys;
import DBlorg.Lorg;
import DBlorg.enums.QaPostsType;
import DBlorg.tables.records.QaPostsRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QaPosts extends TableImpl<QaPostsRecord> {

    private static final long serialVersionUID = 597691671;

    /**
     * The reference instance of <code>DBlorg.qa_posts</code>
     */
    public static final QaPosts QA_POSTS = new QaPosts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QaPostsRecord> getRecordType() {
        return QaPostsRecord.class;
    }

    /**
     * The column <code>DBlorg.qa_posts.postid</code>.
     */
    public final TableField<QaPostsRecord, UInteger> POSTID = createField("postid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>DBlorg.qa_posts.type</code>.
     */
    public final TableField<QaPostsRecord, QaPostsType> TYPE = createField("type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(QaPostsType.class), this, "");

    /**
     * The column <code>DBlorg.qa_posts.parentid</code>.
     */
    public final TableField<QaPostsRecord, UInteger> PARENTID = createField("parentid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.categoryid</code>.
     */
    public final TableField<QaPostsRecord, UInteger> CATEGORYID = createField("categoryid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.catidpath1</code>.
     */
    public final TableField<QaPostsRecord, UInteger> CATIDPATH1 = createField("catidpath1", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.catidpath2</code>.
     */
    public final TableField<QaPostsRecord, UInteger> CATIDPATH2 = createField("catidpath2", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.catidpath3</code>.
     */
    public final TableField<QaPostsRecord, UInteger> CATIDPATH3 = createField("catidpath3", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.acount</code>.
     */
    public final TableField<QaPostsRecord, UShort> ACOUNT = createField("acount", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * The column <code>DBlorg.qa_posts.amaxvote</code>.
     */
    public final TableField<QaPostsRecord, UShort> AMAXVOTE = createField("amaxvote", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * The column <code>DBlorg.qa_posts.selchildid</code>.
     */
    public final TableField<QaPostsRecord, UInteger> SELCHILDID = createField("selchildid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.closedbyid</code>.
     */
    public final TableField<QaPostsRecord, UInteger> CLOSEDBYID = createField("closedbyid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.userid</code>.
     */
    public final TableField<QaPostsRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>DBlorg.qa_posts.cookieid</code>.
     */
    public final TableField<QaPostsRecord, ULong> COOKIEID = createField("cookieid", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.createip</code>.
     */
    public final TableField<QaPostsRecord, UInteger> CREATEIP = createField("createip", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.lastuserid</code>.
     */
    public final TableField<QaPostsRecord, String> LASTUSERID = createField("lastuserid", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>DBlorg.qa_posts.lastip</code>.
     */
    public final TableField<QaPostsRecord, UInteger> LASTIP = createField("lastip", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.upvotes</code>.
     */
    public final TableField<QaPostsRecord, UShort> UPVOTES = createField("upvotes", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * The column <code>DBlorg.qa_posts.downvotes</code>.
     */
    public final TableField<QaPostsRecord, UShort> DOWNVOTES = createField("downvotes", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED)), this, "");

    /**
     * The column <code>DBlorg.qa_posts.netvotes</code>.
     */
    public final TableField<QaPostsRecord, Short> NETVOTES = createField("netvotes", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>DBlorg.qa_posts.lastviewip</code>.
     */
    public final TableField<QaPostsRecord, UInteger> LASTVIEWIP = createField("lastviewip", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>DBlorg.qa_posts.views</code>.
     */
    public final TableField<QaPostsRecord, UInteger> VIEWS = createField("views", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>DBlorg.qa_posts.hotness</code>.
     */
    public final TableField<QaPostsRecord, Double> HOTNESS = createField("hotness", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>DBlorg.qa_posts.flagcount</code>.
     */
    public final TableField<QaPostsRecord, UByte> FLAGCOUNT = createField("flagcount", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>DBlorg.qa_posts.format</code>.
     */
    public final TableField<QaPostsRecord, String> FORMAT = createField("format", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>DBlorg.qa_posts.created</code>.
     */
    public final TableField<QaPostsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>DBlorg.qa_posts.updated</code>.
     */
    public final TableField<QaPostsRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>DBlorg.qa_posts.updatetype</code>.
     */
    public final TableField<QaPostsRecord, String> UPDATETYPE = createField("updatetype", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>DBlorg.qa_posts.title</code>.
     */
    public final TableField<QaPostsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(800), this, "");

    /**
     * The column <code>DBlorg.qa_posts.content</code>.
     */
    public final TableField<QaPostsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(8000), this, "");

    /**
     * The column <code>DBlorg.qa_posts.tags</code>.
     */
    public final TableField<QaPostsRecord, String> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR(800), this, "");

    /**
     * The column <code>DBlorg.qa_posts.name</code>.
     */
    public final TableField<QaPostsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>DBlorg.qa_posts.notify</code>.
     */
    public final TableField<QaPostsRecord, String> NOTIFY = createField("notify", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * Create a <code>DBlorg.qa_posts</code> table reference
     */
    public QaPosts() {
        this(DSL.name("qa_posts"), null);
    }

    /**
     * Create an aliased <code>DBlorg.qa_posts</code> table reference
     */
    public QaPosts(String alias) {
        this(DSL.name(alias), QA_POSTS);
    }

    /**
     * Create an aliased <code>DBlorg.qa_posts</code> table reference
     */
    public QaPosts(Name alias) {
        this(alias, QA_POSTS);
    }

    private QaPosts(Name alias, Table<QaPostsRecord> aliased) {
        this(alias, aliased, null);
    }

    private QaPosts(Name alias, Table<QaPostsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lorg.LORG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QA_POSTS_CATEGORYID, Indexes.QA_POSTS_CATEGORYID_2, Indexes.QA_POSTS_CATIDPATH1, Indexes.QA_POSTS_CATIDPATH1_2, Indexes.QA_POSTS_CATIDPATH2, Indexes.QA_POSTS_CATIDPATH2_2, Indexes.QA_POSTS_CATIDPATH3, Indexes.QA_POSTS_CATIDPATH3_2, Indexes.QA_POSTS_CLOSEDBYID, Indexes.QA_POSTS_CREATEIP, Indexes.QA_POSTS_FLAGCOUNT, Indexes.QA_POSTS_IDX_SEARCH, Indexes.QA_POSTS_LASTIP, Indexes.QA_POSTS_LASTUSERID, Indexes.QA_POSTS_PARENTID, Indexes.QA_POSTS_PRIMARY, Indexes.QA_POSTS_SELCHILDID, Indexes.QA_POSTS_TYPE, Indexes.QA_POSTS_TYPE_2, Indexes.QA_POSTS_TYPE_4, Indexes.QA_POSTS_TYPE_5, Indexes.QA_POSTS_TYPE_6, Indexes.QA_POSTS_TYPE_7, Indexes.QA_POSTS_UPDATED, Indexes.QA_POSTS_USERID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QaPostsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_QA_POSTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QaPostsRecord> getPrimaryKey() {
        return Keys.KEY_QA_POSTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QaPostsRecord>> getKeys() {
        return Arrays.<UniqueKey<QaPostsRecord>>asList(Keys.KEY_QA_POSTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QaPostsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QaPostsRecord, ?>>asList(Keys.QA_POSTS_IBFK_2, Keys.QA_POSTS_IBFK_3, Keys.QA_POSTS_IBFK_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaPosts as(String alias) {
        return new QaPosts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QaPosts as(Name alias) {
        return new QaPosts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QaPosts rename(String name) {
        return new QaPosts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QaPosts rename(Name name) {
        return new QaPosts(name, null);
    }
}
