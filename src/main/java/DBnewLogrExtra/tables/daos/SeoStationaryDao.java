/*
 * This file is generated by jOOQ.
*/
package DBnewLogrExtra.tables.daos;


import DBnewLogrExtra.tables.pojos.SeoStationary;
import DBnewLogrExtra.tables.records.SeoStationaryRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeoStationaryDao extends DAOImpl<SeoStationaryRecord, SeoStationary, Integer> {

    /**
     * Create a new SeoStationaryDao without any configuration
     */
    public SeoStationaryDao() {
        super(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY, SeoStationary.class);
    }

    /**
     * Create a new SeoStationaryDao with an attached configuration
     */
    public SeoStationaryDao(Configuration configuration) {
        super(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY, SeoStationary.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(SeoStationary object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SeoStationary> fetchById(Integer... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SeoStationary fetchOneById(Integer value) {
        return fetchOne(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.ID, value);
    }

    /**
     * Fetch records that have <code>page IN (values)</code>
     */
    public List<SeoStationary> fetchByPage(String... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.PAGE, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<SeoStationary> fetchByTitle(String... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.TITLE, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<SeoStationary> fetchByDescription(String... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>segment IN (values)</code>
     */
    public List<SeoStationary> fetchBySegment(String... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.SEGMENT, values);
    }

    /**
     * Fetch records that have <code>hrefland_default_location IN (values)</code>
     */
    public List<SeoStationary> fetchByHreflandDefaultLocation(String... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.HREFLAND_DEFAULT_LOCATION, values);
    }

    /**
     * Fetch records that have <code>hrefland_for_english IN (values)</code>
     */
    public List<SeoStationary> fetchByHreflandForEnglish(String... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.HREFLAND_FOR_ENGLISH, values);
    }

    /**
     * Fetch records that have <code>hrefland_for_spanish IN (values)</code>
     */
    public List<SeoStationary> fetchByHreflandForSpanish(String... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.HREFLAND_FOR_SPANISH, values);
    }

    /**
     * Fetch records that have <code>hrefland_for_korean IN (values)</code>
     */
    public List<SeoStationary> fetchByHreflandForKorean(String... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.HREFLAND_FOR_KOREAN, values);
    }

    /**
     * Fetch records that have <code>hrefland_for_japanese IN (values)</code>
     */
    public List<SeoStationary> fetchByHreflandForJapanese(String... values) {
        return fetch(DBnewLogrExtra.tables.SeoStationary.SEO_STATIONARY.HREFLAND_FOR_JAPANESE, values);
    }
}
