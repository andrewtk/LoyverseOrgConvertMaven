/*
 * This file is generated by jOOQ.
*/
package DBnewLogrExtra.tables.daos;


import DBnewLogrExtra.tables.pojos.Messages;
import DBnewLogrExtra.tables.records.MessagesRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessagesDao extends DAOImpl<MessagesRecord, Messages, Integer> {

    /**
     * Create a new MessagesDao without any configuration
     */
    public MessagesDao() {
        super(DBnewLogrExtra.tables.Messages.MESSAGES, Messages.class);
    }

    /**
     * Create a new MessagesDao with an attached configuration
     */
    public MessagesDao(Configuration configuration) {
        super(DBnewLogrExtra.tables.Messages.MESSAGES, Messages.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(Messages object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<Messages> fetchById(Integer... values) {
        return fetch(DBnewLogrExtra.tables.Messages.MESSAGES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Messages fetchOneById(Integer value) {
        return fetchOne(DBnewLogrExtra.tables.Messages.MESSAGES.ID, value);
    }

    /**
     * Fetch records that have <code>user_from IN (values)</code>
     */
    public List<Messages> fetchByUserFrom(Integer... values) {
        return fetch(DBnewLogrExtra.tables.Messages.MESSAGES.USER_FROM, values);
    }

    /**
     * Fetch records that have <code>user_to IN (values)</code>
     */
    public List<Messages> fetchByUserTo(Integer... values) {
        return fetch(DBnewLogrExtra.tables.Messages.MESSAGES.USER_TO, values);
    }

    /**
     * Fetch records that have <code>message IN (values)</code>
     */
    public List<Messages> fetchByMessage(String... values) {
        return fetch(DBnewLogrExtra.tables.Messages.MESSAGES.MESSAGE, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<Messages> fetchByTitle(String... values) {
        return fetch(DBnewLogrExtra.tables.Messages.MESSAGES.TITLE, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<Messages> fetchByStatus(String... values) {
        return fetch(DBnewLogrExtra.tables.Messages.MESSAGES.STATUS, values);
    }

    /**
     * Fetch records that have <code>is_new IN (values)</code>
     */
    public List<Messages> fetchByIsNew(Byte... values) {
        return fetch(DBnewLogrExtra.tables.Messages.MESSAGES.IS_NEW, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<Messages> fetchByCreated(Timestamp... values) {
        return fetch(DBnewLogrExtra.tables.Messages.MESSAGES.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<Messages> fetchByUpdated(Timestamp... values) {
        return fetch(DBnewLogrExtra.tables.Messages.MESSAGES.UPDATED, values);
    }
}
